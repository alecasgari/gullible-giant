---
// Get in Touch Section Component
---

<!--  Get in touch Section -->
<section class="get-in-touch py-5 py-lg-11 py-xl-12">
  <div class="container">
    <div class="d-flex flex-column gap-5 gap-xl-10">
      <div class="row gap-7 gap-xl-0">
        <div class="col-xl-4 col-xxl-4">
          <div class="d-flex align-items-center gap-7 py-2" data-aos="fade-right" data-aos-delay="100"
            data-aos-duration="1000">
            <span
              class="round-36 flex-shrink-0 text-dark rounded-circle bg-primary hstack justify-content-center fw-medium">10</span>
            <hr class="border-line bg-white">
            <span class="badge text-bg-dark">Contact us</span>
          </div>
        </div>
        <div class="col-xl-8 col-xxl-7">
          <div class="row">
            <div class="col-xxl-8">
              <div class="d-flex flex-column gap-6" data-aos="fade-up" data-aos-delay="100"
                data-aos-duration="1000">
                <h2 class="mb-0">Get in touch</h2>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="row justify-content-between gap-7 gap-xl-0">
        <div class="col-xl-3">
          <p class="mb-0 fs-5" data-aos="fade-right" data-aos-delay="100" data-aos-duration="1000">Let's collaborate
            and create something amazing! Tell me about your projectâ€”I'm all
            ears.</p>
        </div>
        <div class="col-xl-8">
          <form id="contactForm" class="d-flex flex-column gap-7" data-aos="fade-up" data-aos-delay="200" data-aos-duration="1000">
            <div>
              <input type="text" class="form-control border-bottom border-dark" id="name" name="name"
                placeholder="Name" required>
            </div>
            <div>
              <input type="email" class="form-control border-bottom border-dark" id="email" name="email"
                placeholder="Email" aria-describedby="emailHelp" required>
            </div>
            <div>
              <input type="text" class="form-control border-bottom border-dark" id="company" name="company"
                placeholder="Company">
            </div>
            <div>
              <textarea class="form-control border-bottom border-dark" id="message" name="message"
                placeholder="Tell us about your project" rows="3" required></textarea>
            </div>
            <button type="submit" class="btn w-100 justify-content-center" id="submitBtn">
              <span class="btn-text">Submit message</span>
              <iconify-icon icon="lucide:arrow-up-right"
                class="btn-icon bg-white text-dark round-52 rounded-circle hstack justify-content-center fs-7 shadow-sm"></iconify-icon>
            </button>
          </form>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('contactForm');
    const submitBtn = document.getElementById('submitBtn');
    
    form.addEventListener('submit', async function(e) {
      e.preventDefault();
      
      // Get form data
      const formData = new FormData(form);
      const data = {
        form_id: 'home-01',
        form_name: 'Home Contact Form',
        name: formData.get('name'),
        email: formData.get('email'),
        company: formData.get('company'),
        message: formData.get('message'),
        utm_source: new URLSearchParams(window.location.search).get('utm_source') || 'website',
        utm_medium: new URLSearchParams(window.location.search).get('utm_medium') || 'organic',
        utm_campaign: new URLSearchParams(window.location.search).get('utm_campaign') || 'contact_form',
        utm_term: new URLSearchParams(window.location.search).get('utm_term') || '',
        utm_content: new URLSearchParams(window.location.search).get('utm_content') || '',
        page_url: window.location.href,
        timestamp: new Date().toISOString()
      };
      
      // Update button text
      submitBtn.innerHTML = '<span class="btn-text">Sending...</span><iconify-icon icon="lucide:loader-2" class="btn-icon bg-white text-dark round-52 rounded-circle hstack justify-content-center fs-7 shadow-sm animate-spin"></iconify-icon>';
      submitBtn.disabled = true;
      
      try {
        console.log('Sending data to webhook:', data);
        
        // Convert data to URL parameters for GET request
        const params = new URLSearchParams();
        Object.keys(data).forEach(key => {
          if (data[key] !== null && data[key] !== undefined && data[key] !== '') {
            params.append(key, String(data[key]));
          }
        });
        
        const webhookUrl = `https://n8n.alecasgari.com/webhook/3d5997cf-3089-46fd-91e2-1183043092c4?${params.toString()}`;
        console.log('Webhook URL:', webhookUrl);
        
        const response = await fetch(webhookUrl, {
          method: 'GET',
          headers: {
            'Accept': 'application/json',
          },
          mode: 'cors'
        });
        
        console.log('Response status:', response.status);
        console.log('Response headers:', response.headers);
        
        const responseText = await response.text();
        console.log('Response body:', responseText);
        
        if (response.ok || response.status === 200) {
          // Success - redirect to thank you page with form data
          const params = new URLSearchParams({
            name: data.name,
            email: data.email,
            company: data.company || '',
            message: data.message,
            timestamp: data.timestamp
          });
          
          window.location.href = `/thank-you?${params.toString()}`;
        } else {
          throw new Error(`HTTP ${response.status}: ${responseText}`);
        }
      } catch (error) {
        console.error('Detailed error:', error);
        console.error('Error message:', error.message);
        console.error('Error stack:', error.stack);
        
        submitBtn.innerHTML = '<span class="btn-text">Error - Try Again</span><iconify-icon icon="lucide:x" class="btn-icon bg-white text-dark round-52 rounded-circle hstack justify-content-center fs-7 shadow-sm"></iconify-icon>';
        
        // Reset button after 3 seconds
        setTimeout(() => {
          submitBtn.innerHTML = '<span class="btn-text">Submit message</span><iconify-icon icon="lucide:arrow-up-right" class="btn-icon bg-white text-dark round-52 rounded-circle hstack justify-content-center fs-7 shadow-sm"></iconify-icon>';
          submitBtn.disabled = false;
        }, 3000);
      }
    });
  });
</script>
